<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gbk" />
<title>模型-视图-控制器 (MVC) - 入门基础 - PHPCMS V9 在线帮助文档</title>
<meta name="keywords" content="模型-视图-控制器 (MVC),模型视图">
<meta name="description" content="&amp;nbsp;　　MVC是一个设计模式，它强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型（M）、视图（V）、控制器（C），它们各自处理自己的任务。&amp;nbsp;视图 ：　　视图是用户看到并与之交...">
<style type="text/css">
<!--
*{ padding:0; margin:0}
h5 a, a{color:#000}
h5{font-size:14px; font-weigth:normal }
ul,li{ list-style:none}
a{text-decoration:none;}
a:hover{text-decoration:underline;}
body,html{background: url("statics/images/img/left-bg.png"/*tpa=http://v9.help.phpcms.cn/statics/images/img/left-bg.png*/) repeat-y; font:12px/20px "tahoma,verdana,arial,sans-serif"}
h1{font-size:34px;}h2{font-size:26px; padding:8px 0 16px}h3{font-size:18px; }h4{font-size:16px;}h5{font-size:14px;}h6{font-size:12px;}
.f12{font-size: 12px}.f14{font-size: 14px}.f16{font-size: 16px}.f18{font-size:18px}.f20{font-size:20px}
.lh20{line-height: 20px}.lh22{line-height: 22px}.lh24{line-height: 24px}.lh26{line-height: 26px}.lh28{line-height: 28px}
.fb{ font-weight:bold}.fn{ font-weight:normal}
.bk,.bk3,.bk6,.bk8,.bk10,.bk15,.bk20,.bk30{clear: both;font-size: 1px;height: 0;line-height: 1px}
.bk3{height: 3px;}.bk6{height: 6px}.bk8{height: 8px}.bk10{height: 10px}.bk15{height: 15px}.bk20{height: 20px}.bk30{height: 30px}
.row-2 li{ float:left; width:50%}.row-3 li{ float:left; width:33%}.row-4 li{ float:left; width:25%}.row-5 li{ float:left; width:20%}
.cu,.cu-li li,.cu-span span {cursor: hand;!important;cursor: pointer}
.text-c{text-align: center}.text-l{text-align: left}.text-r{text-align: right}
.lf{float: left}.rt{float: right}.pr{ position:relative}.pa{ position:absolute}

.header {background: url("statics/images/img/logo.png"/*tpa=http://v9.help.phpcms.cn/statics/images/img/logo.png*/) no-repeat 15px center #0065b2;border-bottom: 1px solid #00508d; height:34px; line-height:34px}
.nav{ float:right; padding-right:16px;}
.nav a{ color:#e2e9ea}
.maincol{ overflow:hidden}
.col-left{ float:left; width:163px; padding:15px 0 0 15px; margin-right:10px}
.col-auto{ overflow:hidden;_float:left; zoom:1; padding:15px 10px 0 0;font-size:14px; line-height:30px;}
.sidebar{ margin-bottom:8px}
.sidebar li{ line-height:18px;}
.sidebar li a{color:#0066dd; background: url("statics/images/img/o.png"/*tpa=http://v9.help.phpcms.cn/statics/images/img/o.png*/) no-repeat left center; padding-left:8px}
.letter{ padding:10px 0}
.letter a { display:inline-block; width:26px; height:22px; line-height:21px; background:#fff; border:1px solid #e3e3e3; text-align:center; color:#333; margin-right:5px}
.letter a { background:url("statics/images/img/pages.png"/*tpa=http://v9.help.phpcms.cn/statics/images/img/pages.png*/) no-repeat 0 5px; font-family:Arial, Helvetica, sans-serif}
.letter a:hover { background:#f1f1f1; color:#000; text-decoration:none;}
.letter a.cur{background:#5a85b2; border:1px solid #5a85b2; color:#fff;}

.letNum{background-color: #EFEFEF; padding:3px 8px}
.letNum span{ font-size:12px; font-weight:normal}
.letList{ padding:10px}
.letList dd{ border:1px solid #eee; padding:3px 5px; color: #666; margin-bottom:8px}
.src-code {background-color:#f4f9fe;border:1px solid #e8e8e8;	font-family:'Courier New',Courier,monospace;font-weight:normal;margin:0;overflow:auto;padding:1em}
.separator {background-color:#bed0e4;height:1px;}
hr{border-color:#bed0e4;border-style:solid;height:1px;margin-bottom:10px;margin-top:10px}
blockquote{border:dashed 1px; padding:5px; background :#F2F2F2}
blockquote em{font-style:normal;font-size:12px;}

ol{padding-left:40px}
ol li{list-style-type: decimal; text-indent:-8px}
.content_end a{font-weight:bold}
.clear{clear:both}
.footer{text-align:center;margin:auto}
-->
</style>
<link href="statics/css/prettify.css" tppabs="http://v9.help.phpcms.cn/statics/css/prettify.css" type="text/css" rel="stylesheet" /> 
<script type="text/javascript" src="statics/js/prettify/prettify.js" tppabs="http://v9.help.phpcms.cn/statics/js/prettify/prettify.js"></script>
</head>

<body onload="prettyPrint()">
<div class="header">
<span class="nav"></span>
</div><a name="top"></a>
    <div class="col-left">
     <h5><a href="index.htm" tppabs="http://v9.help.phpcms.cn/">PHPCMS V9帮助中心</a></h5>
        	<h5><a href="index.php-m=content&c=index&a=lists&catid=181&page=1.htm" tppabs="http://v9.help.phpcms.cn/index.php?m=content&c=index&a=lists&catid=181&page=1">二次开发</a></h5>
            <h5><a href="index.php-m=content&c=index&a=lists&catid=184&page=1.htm" tppabs="http://v9.help.phpcms.cn/index.php?m=content&c=index&a=lists&catid=184&page=1">入门基础</a></h5>
                <ul class="sidebar">
                     	<li><a href="index.php-m=content&c=index&a=show&catid=184&id=76.htm" tppabs="http://v9.help.phpcms.cn/index.php?m=content&c=index&a=show&catid=184&id=76" title="服务器要求">服务器要求</a></li>
        	        	<li><a href="index.php-m=content&c=index&a=show&catid=184&id=77.htm" tppabs="http://v9.help.phpcms.cn/index.php?m=content&c=index&a=show&catid=184&id=77" title="模型-视图-控制器 (MVC)"><b>模型-视图-控制器...</b></a></li>
        	        </ul>
            </div>
    <div class="col-auto">
    <h2>模型-视图-控制器 (MVC)</h2>
     <p>
	&nbsp;</p>
<div>
	　　MVC是一个设计模式，它强制性的使应用程序的输入、处理和输出分开。使用</div>
<p>
	<img alt="" src="uploadfile/2010/0928/20100928034512851.gif" tppabs="http://v9.help.phpcms.cn/uploadfile/2010/0928/20100928034512851.gif" style="float: right; width: 351px; height: 301px; " /></p>
<div>
	MVC应用程序被分成三个核心部件：<strong>模型（M）</strong>、<strong>视图（V）</strong>、<strong>控制器（C）</strong>，它们各自处理自己的任务。</div>
<div>
	&nbsp;</div>
<div>
	<strong>视图 ：</strong></div>
<div>
	　　视图是用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，但一些新的技术已层出不穷，它们包括Adobe Flash和象XHTML，XML/XSL，WML等一些标识语言和Web services。如何处理应用程序的界面变得越来越有挑战性。MVC一个大的好处是它能为你的应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，不管这些数据是联机存储的还是一个雇员列表，作为视图来讲，它只是作为一种输出数据并允许用户操纵的方式。</div>
<div>
	&nbsp;</div>
<div>
	<strong>模型 ：</strong></div>
<div>
	　　模型表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。例如它可能用象EJBs和ColdFusion Components这样的构件对象来处理数据库。被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据。由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。</div>
<div>
	&nbsp;</div>
<div>
	<strong>控制器 ：</strong></div>
<div>
	　　控制器接受用户的输入并调用模型和视图去完成用户的需求。所以当单击Web页面中的超链接和发送HTML表单时，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后确定用哪个视图来显示模型处理返回的数据。</div>
<div>
	&nbsp;</div>
<div>
	　　现在我们总结MVC的处理过程，首先控制器接收用户的请求，并决定应该调用哪个模型来进行处理，然后模型用业务逻辑来处理用户的请求并返回数据，最后控制器用相应的视图格式化模型返回的数据，并通过表示层呈现给用户。</div>
     <div class="content_end"><a href="#top">回到顶部↑</a> <a href="index.php-m=content&c=index&a=lists&catid=181&page=1.htm" tppabs="http://v9.help.phpcms.cn/index.php?m=content&c=index&a=lists&catid=181&page=1">返回到二次开发</a>
    </div>
    </div>
</div>
<div class="clear"></div>
<div class="footer">PHPCMS 帮助文档 &copy; 2010 盛大网络发展有限公司</div>
</body>
</html>